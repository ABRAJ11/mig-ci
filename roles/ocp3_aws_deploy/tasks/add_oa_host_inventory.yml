# Source: https://gitlab.sat.engineering.redhat.com/rhci/vm_env/tree/master/openshift/aos-3.11
# Creator: Jason Montleon - https://gitlab.sat.engineering.redhat.com/jmontleo
- block:
  - name: Copy the ssh key to master
    copy:
      content: "{{ lookup('file', ec2_private_key_file) }}"
      dest: "{{ ssh_private_key }}"
      mode: 0400

  - name: Read the clusterid
    shell: 'cat /var/tmp/clusterid'
    register: clusterid

  - assert:
      that: aws_access_key_id != '' and aws_secret_access_key != ''
      fail_msg: AWS deployment needs to have AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY set in the env.

  - assert:
      that: sub_user != 'undefined' and sub_pass != 'undefined'
      fail_msg: AWS deployment needs to have SUB_USER and SUB_PASS set in the env.

  - name: Add openshift all-in-one inventory to master node
    set_fact:
      host: localhost
      h_groups:
        - OSEv3
        - masters
        - nodes
        - etcd
      h_vars:
        ansible_connection: local
        ansible_become: yes
        ansible_user: ec2-user
        ansible_ssh_private_key_file: "{{ ssh_private_key }}"

        # AWS provider setup
        openshift_cloudprovider_kind: aws
        openshift_clusterid: "{{ clusterid.stdout }}"
        openshift_cloudprovider_aws_access_key: "{{ aws_access_key_id }}"
        openshift_cloudprovider_aws_secret_key: "{{ aws_secret_access_key }}"

        os_sdn_network_plugin_name: "{{ network_plugin }}"
        ansible_service_broker_install: false
        openshift_deployment_type: "{{ oa_deployment_type }}"
        openshift_disable_check: "{{ common_check_excluder }}"
        openshift_public_hostname: "{{ ec2_instance_ip }}.xip.io"
        openshift_public_ip: "{{ ec2_instance_ip }}"
        openshift_master_cluster_public_hostname: "{{ ec2_instance_ip }}.xip.io"
        openshift_master_default_subdomain: "apps.{{ ec2_instance_ip }}.xip.io"
        openshift_master_identity_providers:
          - name: allow_all
            login: true
            challenge: true
            kind: AllowAllPasswordIdentityProvider
        openshift_schedulable: true
        openshift_release: "{{ ocp_release[ocp3_version] }}"
        openshift_portal_net: 172.30.0.0/16
        docker_version: "{{ docker_versions[ocp3_version] }}"

  - set_fact:
      h_vars: "{{ h_vars | combine(ocp_additional_tags) }}"

  - set_fact:
      master_hosts:
        host_name: "{{ host }}"
        groups: "{{ h_groups }}"
        host_vars: "{{ h_vars }}"

  - name: Copy the inventory to master node
    copy:
      content: "{{ master_hosts }}"
      dest: "/var/tmp/master-hosts"
      remote_src: true
  delegate_to: "{{ ec2_instance_ip }}"
